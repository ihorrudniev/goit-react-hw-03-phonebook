{"version":3,"sources":["Components/Form/Form.js","Components/Filter/Filter.js","Components/Container/Container.js","Components/ContactsList/ContactsListItem.js","Components/ContactsList/ContactsList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","props","onSubmit","reset","this","className","htmlFor","type","pattern","title","onChange","required","Component","PropType","func","isRequired","Filter","string","Container","children","ContactItem","onDeleteContact","onClick","prototype","ContactsList","findContact","map","PropTypes","App","contacts","filter","addContact","hasContacts","alert","find","toLowerCase","normalizedFilter","toLocaleLowerCase","length","includes","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","console","log","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93e0a420.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropType from \"prop-types\";\nimport shortid from \"shortid\";\nimport \"./Form.css\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const contact = {\n      id: shortid.generate(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.props.onSubmit(contact);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className=\"Form\" onSubmit={this.handleSubmit}>\n        <label className=\"Form__label\" htmlFor={this.nameInputId}>\n          Name{\" \"}\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            value={name}\n            onChange={this.handleChange}\n            // onChange={() => onToggleCompleted(id)}\n            id={this.nameInputId}\n            required\n          />\n        </label>\n        <br />\n        <label className=\"Form__label\" htmlFor={this.numberInputId}>\n          Number{\" \"}\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            value={number}\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nForm.PropType = { onSubmit: PropType.func.isRequired };\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport PropType from \"prop-types\";\nimport \"./Filter.css\";\n\nclass Filter extends Component {\n  render() {\n    return (\n      <>\n        <h3 className=\"Filter__title\">Find contacts by name</h3>\n        <input\n          className=\"Filter__input\"\n          type=\"text\"\n          name=\"filter\"\n          value={this.props.value}\n          onChange={this.props.onChange}\n        />\n      </>\n    );\n  }\n}\n\nFilter.PropType = {\n  value: PropType.string,\n  onChange: PropType.func.isRequired,\n};\n\nexport default Filter;\n","import \"./Container.css\";\n// import \"./App.css\";\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import PropType from \"prop-types\";\nimport \"./ContactsList.css\";\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <li className=\"Contacts__item\">\n      {name}: {number}\n      <button\n        className=\"Contacts__btn\"\n        type=\"submit\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.prototype = {\n  id: PropType.number.isRequired,\n  name: PropType.string.isRequired,\n  number: PropType.number.isRequired,\n  onDeleteContact: PropType.func.isRequired,\n};\n\nexport default ContactItem;\n","import ContactItem from \"./ContactsListItem\";\nimport PropTypes from \"prop-types\";\nimport \"./ContactsList.css\";\n\nconst ContactsList = ({ findContact, onDeleteContact }) => {\n  return (\n    <ul className=\"ContactsList__item\">\n      {findContact().map(({ id, name, number }) => {\n        return (\n          <ContactItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={onDeleteContact}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactsList.prototype = {\n  findContact: PropTypes.func.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import React, { Component } from 'react';\nimport Form from './Components/Form';\nimport Filter from './Components/Filter';\nimport Container from './Components/Container';\nimport ContactsList from './Components/ContactsList';\n// import initialContacts from './contacts.json';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = contact => {\n    if (!this.hasContacts(contact.name)) {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    } else {\n      alert(`${contact.name} is already in contacts`);\n    }\n  };\n\n  hasContacts = name => {\n    return this.state.contacts.find(contact => {\n      return contact.name.toLowerCase() === name.toLowerCase();\n    });\n  };\n\n  findContact = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLocaleLowerCase();\n\n    if (filter.length) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter),\n      );\n    } else {\n      return contacts;\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  componentDidMount() {\n    console.log('App componentDidMount');\n\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('App componentDidUpdate');\n\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('Обновилось поле Контактов, записываю контакты в хранилище');\n\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    console.log('App render');\n\n    const { filter } = this.state;\n\n    return (\n      <Container>\n        <h1 className=\"App__title\">Phonebook</h1>\n\n        <Form onSubmit={this.addContact} />\n\n        <div>\n          <h1 className=\"App__title\">Contacts</h1>\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactsList\n            findContact={this.findContact}\n            onDeleteContact={this.deleteContact}\n          />\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}